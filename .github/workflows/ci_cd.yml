name: CI/CD Pipeline

on:
  push:
    branches: [main]


jobs: 
  build:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - name: Chechout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

  
  setup-frontend:
    name: Setup frontend
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps


      # - name: Build frontend
      #   run: npm run build


  dockerize:
    name: Dockerize app
    runs-on: ubuntu-latest
    needs: setup-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tp_automate_frontend:tagname .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tp_automate_frontend:tagname

  deploy-backend:
    name:  Deploy Backend
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
